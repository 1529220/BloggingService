import java.awt.EventQueue;
EventQueue is a platform-independent class that queues events,
both from the underlying peer classes and from trusted application classes.


import javax.swing.JFrame;
Adds support for the JFC/Swing component architecture.


import net.miginfocom.swing.MigLayout;
MigLayout is a manager Layout that makes layout problems trivial


import javax.swing.JButton;
To be able to work with JButtons


import javax.swing.JTextField;
To be able to work with JTextField


import javax.swing.AbstractAction;
Standard behaviors like the get and set methods for Action object properties 
(icon, text, and enabled) are defined here


import java.awt.event.ActionEvent;
A semantic event which indicates that a component-defined action occurred.
 This high-level event is generated by a component (such as a Button) 
when the component-specific action occurs (such as being pressed). 
The event is passed to every ActionListener object that registered to receive
 such events using the component's addActionListener method.


import javax.swing.Action;
To be able to create action the the buttons


import javax.swing.DefaultListModel;
To be able to create a model list. 
This class notifies the ListDataListeners when changes, in the list created, occur.


import java.awt.event.ActionListener;
The listener interface for receiving action events. 
The class that is interested in processing an action event implements this interface,
 and the object created with that class is registered with a component,
 using the component's addActionListener method. When the action event occurs,
 that object's actionPerformed method is invoked.


import java.util.ArrayList;
To be able to work with ArrayList


import java.util.Calendar;
The Calendar class is an abstract class that provides methods
 for converting between a specific instant in time and a set of calendar fields
 such as YEAR, MONTH, DAY_OF_MONTH, HOUR, and so on, and for manipulating the calendar fields,
 such as getting the date of the next week. 


import javax.swing.JList;
To be able to work with JList


import javax.swing.JOptionPane;
To be able to work with JOptionPane


import javax.swing.JLabel;
To be able to work with JLabel


import javax.swing.JTextArea;
To be able to work with JTextArea


import java.awt.TextArea;
To be able to work with TextArea


import java.awt.SystemColor;
A class to encapsulate symbolic colors representing the color of native GUI objects on a system.
